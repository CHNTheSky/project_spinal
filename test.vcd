$version Generated by VerilatedVcd $end
$date 01/06/22 10:11:05 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 W clk $end
  $var wire 32 S io_axis_payload [31:0] $end
  $var wire  1 R io_axis_ready $end
  $var wire  4 O io_axis_tkeep [3:0] $end
  $var wire  1 P io_axis_tlast $end
  $var wire  1 Q io_axis_valid $end
  $var wire 32 V io_dmaWrapper_payload [31:0] $end
  $var wire  1 U io_dmaWrapper_ready $end
  $var wire  1 T io_dmaWrapper_valid $end
  $var wire  1 X reset $end
  $scope module DmaWrapper $end
   $var wire 64 e area_LogicOut_streamOut_payload [63:0] $end
   $var wire  1 ` area_LogicOut_streamOut_ready $end
   $var wire 64 . area_LogicOut_streamOut_translated_payload [63:0] $end
   $var wire  1 ` area_LogicOut_streamOut_translated_ready $end
   $var wire  1 # area_LogicOut_streamOut_translated_valid $end
   $var wire  1 # area_LogicOut_streamOut_valid $end
   $var wire  1 % area_LogicOut_validVec_0 $end
   $var wire  1 & area_LogicOut_validVec_1 $end
   $var wire  1 W clk $end
   $var wire  2 5 count [1:0] $end
   $var wire 64 . dataJoin [63:0] $end
   $var wire  4 + fifoCach_io_availability [3:0] $end
   $var wire  4 * fifoCach_io_occupancy [3:0] $end
   $var wire 32 E fifoCach_io_pop_payload [31:0] $end
   $var wire  1 ) fifoCach_io_pop_valid $end
   $var wire  1 ( fifoCach_io_push_ready $end
   $var wire 32 S io_axis_payload [31:0] $end
   $var wire  1 R io_axis_ready $end
   $var wire  4 O io_axis_tkeep [3:0] $end
   $var wire  1 P io_axis_tlast $end
   $var wire  1 Q io_axis_valid $end
   $var wire  1 F io_axis_valid_regNext $end
   $var wire 32 V io_dmaWrapper_payload [31:0] $end
   $var wire  1 U io_dmaWrapper_ready $end
   $var wire  1 T io_dmaWrapper_valid $end
   $var wire  1 Y isFirstOne $end
   $var wire  1 $ popValidDelay1 $end
   $var wire  1 X reset $end
   $var wire  3 4 shiftBit [2:0] $end
   $var wire 32 ' streamFifo_2_io_pop_payload [31:0] $end
   $var wire  1 # streamFifo_2_io_pop_valid $end
   $var wire 32 ' streamFifo_2_io_push_payload [31:0] $end
   $var wire  1 U streamFifo_2_io_push_ready $end
   $var wire  1 , tLastDelay1 $end
   $var wire  1 - tLastDelay2 $end
   $var wire 128 0 tmpData [127:0] $end
   $var wire  1 \ when_DmaWrapper_l28 $end
   $var wire  1 ] when_DmaWrapper_l28_1 $end
   $var wire  1 ^ when_DmaWrapper_l28_2 $end
   $var wire  1 _ when_DmaWrapper_l28_3 $end
   $var wire  1 Z when_DmaWrapper_l35 $end
   $var wire  1 [ when_DmaWrapper_l37 $end
   $var wire  1 ) when_DmaWrapper_l55 $end
   $var wire  1 Y when_DmaWrapper_l56 $end
   $var wire  1 6 when_DmaWrapper_l62 $end
   $var wire  1 a when_Utils_l357 $end
   $scope module fifoCach $end
    $var wire  1 W clk $end
    $var wire  4 + io_availability [3:0] $end
    $var wire  1 h io_flush $end
    $var wire  4 * io_occupancy [3:0] $end
    $var wire 32 E io_pop_payload [31:0] $end
    $var wire  1 g io_pop_ready $end
    $var wire  1 ) io_pop_valid $end
    $var wire 32 S io_push_payload [31:0] $end
    $var wire  1 ( io_push_ready $end
    $var wire  1 Q io_push_valid $end
    $var wire  1 ? logic_empty $end
    $var wire  1 @ logic_full $end
    $var wire  3 : logic_popPtr_value [2:0] $end
    $var wire  3 c logic_popPtr_valueNext [2:0] $end
    $var wire  1 h logic_popPtr_willClear $end
    $var wire  1 9 logic_popPtr_willIncrement $end
    $var wire  1 < logic_popPtr_willOverflow $end
    $var wire  1 ; logic_popPtr_willOverflowIfInc $end
    $var wire  1 ) logic_popping $end
    $var wire  3 A logic_ptrDif [2:0] $end
    $var wire  1 = logic_ptrMatch $end
    $var wire  3 7 logic_pushPtr_value [2:0] $end
    $var wire  3 C logic_pushPtr_valueNext [2:0] $end
    $var wire  1 h logic_pushPtr_willClear $end
    $var wire  1 B logic_pushPtr_willIncrement $end
    $var wire  1 b logic_pushPtr_willOverflow $end
    $var wire  1 8 logic_pushPtr_willOverflowIfInc $end
    $var wire  1 D logic_pushing $end
    $var wire 32 G logic_ram[0] [31:0] $end
    $var wire 32 H logic_ram[1] [31:0] $end
    $var wire 32 I logic_ram[2] [31:0] $end
    $var wire 32 J logic_ram[3] [31:0] $end
    $var wire 32 K logic_ram[4] [31:0] $end
    $var wire 32 L logic_ram[5] [31:0] $end
    $var wire 32 M logic_ram[6] [31:0] $end
    $var wire 32 N logic_ram[7] [31:0] $end
    $var wire  1 > logic_risingOccupancy $end
    $var wire  1 X reset $end
    $var wire  1 d when_Stream_l955 $end
   $upscope $end
   $scope module streamFifo_2 $end
    $var wire  1 h io_flush $end
    $var wire 32 ' io_pop_payload [31:0] $end
    $var wire  1 U io_pop_ready $end
    $var wire  1 # io_pop_valid $end
    $var wire 32 ' io_push_payload [31:0] $end
    $var wire  1 U io_push_ready $end
    $var wire  1 # io_push_valid $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
1$
0%
0&
b00000000000000000000000000000000 '
1(
0)
b0000 *
b1000 +
1,
0-
b0000000000000000000000000000000000000000000000000000000000000000 .
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0
b000 4
b00 5
16
b000 7
08
09
b000 :
0;
0<
1=
0>
1?
0@
b000 A
0B
b000 C
0D
b11010100101111001000101111100011 E
0F
b01011101110111001001000110100110 G
b10111101111110000000010001000000 H
b11010001001101011001011011010010 I
b01001011010101111000101110000101 J
b10001010010010011110110010111000 K
b10011010101011110110000011010001 L
b00101001001100101000110110111001 M
b00001010000100110100110011011010 N
b0000 O
0P
0Q
1R
b00000000000000000000000000000000 S
0T
1U
b00000000000000000000000000000000 V
0W
1X
0Y
0Z
0[
1\
1]
1^
1_
0`
0a
0b
b000 c
0d
b1110101111010110010110010001110111110110110001100011000010010001 e
1g
0h
#160
0X
#170
1#
0$
1%
0,
1-
b01011101110111001001000110100110 E
1T
1W
1a
#175
0W
#180
0%
1&
0-
1W
1`
#185
0W
#190
0#
0&
0T
1W
0`
0a
#195
0W
#200
1W
#205
0W
#210
1W
#215
0W
#220
1W
#225
0W
#230
1W
#235
0W
#240
1W
#245
0W
#250
1W
#255
0W
#260
1B
b001 C
1D
b0001 O
1Q
b00000000000000000000000011111111 S
1W
1Y
1Z
0\
1d
#265
0W
#270
b0001 *
b0111 +
b01 5
06
b001 7
0=
1>
0?
b001 A
b010 C
1F
b00000000000000000000000011111111 G
b1111 O
b11111111111111111111111111111111 S
1W
0Y
0]
0^
0_
#275
0W
#280
1)
b0010 *
b0110 +
b10 5
b010 7
19
b010 A
b011 C
b00000000000000000000000011111111 E
b11111111111111111111111111111111 H
b1110 O
1P
b11111111111111110001000100000000 S
1W
0Z
1\
b001 c
0d
#285
0W
#290
1$
1,
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111 0
b011 7
b001 :
0B
0D
b11111111111111111111111111111111 E
b11111111111111110001000100000000 I
b0000 O
0P
0Q
b00000000000000000000000000000000 S
1W
1[
1]
1^
1_
b010 c
1d
#295
0W
#300
b0001 *
b0111 +
0,
1-
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111 0
b01 5
b010 :
0>
b001 A
b11111111111111110001000100000000 E
0F
1W
b011 c
#305
0W
#310
0)
b0000 *
b1000 +
0-
b00000000000000000000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111110001000100000000 0
b00 5
16
09
b011 :
1=
1?
b000 A
b01001011010101111000101110000101 E
1W
0[
0d
#315
0W
#320
1#
0$
1%
b11111111111111111111111100010001 '
b1111111111111111111111111111111111111111111111111111111100010001 .
1T
b11111111111111111111111100010001 V
1W
1a
#325
0W
#330
0%
1&
b11111111111111111111111111111111 '
b11111111111111111111111111111111 V
1W
1`
#335
0W
#340
0#
0&
b11111111111111111111111100010001 '
0T
b11111111111111111111111100010001 V
1W
0`
0a
#345
0W
#350
1W
#355
0W
#360
1W
#365
0W
#370
1W
#375
0W
#380
1W
#385
0W
#390
